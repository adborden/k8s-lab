---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: vault

helmCharts:
  - name: vault
    includeCRDs: true
    repo: https://helm.releases.hashicorp.com
    releaseName: vault
    version: 0.29.1
    valuesInline:
      server:
        dataStorage:
          enabled: true
          size: 10Gi
        extraEnvironmentVars:
          # Impersonation non-credentials via configmap
          GOOGLE_APPLICATION_CREDENTIALS: >-
            /etc/workload-identity/credentials.json
        volumes:
          - name: token
            projected:
              sources:
                - serviceAccountToken:
                    audience: >-
                      https://iam.googleapis.com/projects/863555219739/locations/global/workloadIdentityPools/fl-a14n-net/providers/fl-a14n-net
                    expirationSeconds: 3600
                    path: token
          - name: google-creds
            configMap:
              name: google-creds
        volumeMounts:
          - name: token
            mountPath: /var/run/vault-fl-a14n-net
            readOnly: true
          - name: google-creds
            mountPath: /etc/workload-identity
            readOnly: true
        ha:
          enabled: true
          # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/examples/ha-with-raft
          raft:
            enabled: true
            config: |
              ui = true

              listener "tcp" {
                tls_disable = 1
                address = "[::]:8200"
                cluster_address = "[::]:8201"
                # Enable unauthenticated metrics access (necessary for Prometheus Operator)
                telemetry {
                  unauthenticated_metrics_access = "true"
                }
              }

              storage "raft" {
                path = "/vault/data"
              }

              service_registration "kubernetes" {}

              seal "gcpckms" {
                 project     = "cloud-294216"
                 region      = "us-west1"
                 key_ring    = "vault-fl-a14n-net"
                 crypto_key  = "vault-fl-a14n-net"
              }
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
          ingressClassName: nginx
          hosts:
            - host: vault.fl.a14n.net
          tls:
            - hosts:
                - vault.fl.a14n.net
              secretName: vault-tls
