---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
  - resources/grafana-pvc.yaml
  - resources/namespace.yaml
  - resources/prometheus-pvc.yaml

helmCharts:
  - name: kube-prometheus-stack
    includeCRDs: true
    repo: https://prometheus-community.github.io/helm-charts
    releaseName: prometheus-stack
    namespace: monitoring
    version: 79.0.0
    valuesInline:
      alertmanager:
        config:
          route:
            receiver: default
            routes:
              - receiver: watchdog
                matchers:
                  - alertname="Watchdog"
                repeat_interval: 5m
                continue: false
              - receiver: solana-validator
                matchers:
                  - service="solana"
                continue: false
          receivers:
            - name: default
              # discord_configs:
              #   - webhook_url: ""
              pagerduty_configs:
                - routing_key_file: /etc/alertmanager/secrets/alertmanager-pagerduty/pd-default
            - name: solana-validator
              pagerduty_configs:
                - routing_key_file: /etc/alertmanager/secrets/alertmanager-pagerduty/pd-solana-validator
            - name: watchdog
              webhook_configs:
                - url_file: /etc/alertmanager/secrets/alertmanager-pagerduty/uptime-kuma-alertmanager
        alertmanagerSpec:
          secrets:
            - alertmanager-pagerduty
          storage:
            volumeClaimTemplate:
              spec:
                resources:
                  requests:
                    storage: 10Gi
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
          ingressClassName: nginx
          hosts:
            - alertmanager.fl.a14n.net
          tls:
            - hosts:
                - alertmanager.fl.a14n.net
              secretName: alertmanager-tls
      defaultRules:
        rules:
          # k3s does not have these components
          kubeControllerManager: false
          kubeProxy: false
          kubeSchedulerAlerting: false
          kubeSchedulerRecording: false
      grafana:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: a14n.net/storage
                      operator: In
                      values:
                        - ceph
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
          ingressClassName: nginx
          hosts:
            - grafana.fl.a14n.net
          tls:
            - hosts:
                - grafana.fl.a14n.net
              secretName: grafana-tls
        persistence:
          enabled: true
          existingClaim: grafana-data
        deploymentStrategy:
          type: Recreate
      prometheus:
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
          ingressClassName: nginx
          hosts:
            - prometheus.fl.a14n.net
          tls:
            - hosts:
                - prometheus.fl.a14n.net
              secretName: prometheus-tls
        prometheusSpec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: a14n.net/storage
                        operator: In
                        values:
                          - ceph
          retention: 30d
          ruleSelectorNilUsesHelmValues: false
          podMonitorSelectorNilUsesHelmValues: false
          probeSelectorNilUsesHelmValues: false
          scrapeConfigSelectorNilUsesHelmValues: false
          serviceMonitorSelectorNilUsesHelmValues: false
          storageSpec:
            volumeClaimTemplate:
              metadata:
                name: prometheus-data
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 50Gi
